{% extends "base.jade" %}

{% block header %}
style!= profile.get_custom_css()
{% endblock %}

{% block content %}
.row 
  .col-sm-4
    ul.list-group
      li.list-group-item.section-header.category-section-header 
        h1.breadcrumb-h1 {{profile.display_name}}'s Profile
        {% if current_user == profile or current_user.is_admin %}
        a(href="/member/{{profile.my_url}}/change-avatar-title")
          span.glyphicon.glyphicon-cog.float-right
        {% endif %}
      li.list-group-item
        center
          img.center-block.profile-page-avatar.profile-avatar(src="{{profile.get_avatar_url()}}", width="{{profile.avatar_full_x}}", height="{{profile.avatar_full_y}}")
          if profile.title
            span.text-muted= profile.title
          for role in profile.get_roles()
            if role
              br
              span
                strong
                  | {{role}}
          if current_user.is_authenticated() and current_user.is_admin and not profile.validated
            center
              a.btn.btn-warning.post-link(href="/member/{{profile.my_url}}/validate-user") Validate User
              br
              br
          if current_user.is_authenticated() and current_user != profile and current_user not in profile.ignoring()
            center
              br
              .btn-group
                a.btn.btn-default(href="/new-message/{{profile.my_url}}") PM
                if current_user not in profile.followed_by()
                  a.btn.btn-default.post-link(href="/member/{{profile.my_url}}/toggle-follow") Follow
                else
                  a.btn.btn-default.post-link(href="/member/{{profile.my_url}}/toggle-follow") Unfollow
                if not current_user in profile.rejected_friends()
                  if current_user in profile.pending_friends() 
                    a.btn.btn-default.post-link(href="#") Waiting
                  elif current_user not in profile.friends()
                    a.btn.btn-default.post-link(href="/member/{{profile.my_url}}/request-friend") Friend Request
                  else
                    a.btn.btn-default.post-link(href="/member/{{profile.my_url}}/un-friend") Unfriend
                if profile not in current_user.ignoring()
                  a.btn.btn-default.post-link(href="/member/{{profile.my_url}}/toggle-ignore") Ignore
                else
                  a.btn.btn-default.post-link(href="/member/{{profile.my_url}}/toggle-ignore") Unignore
                br
                br
                center
                  a.btn.btn-default.report-button(data-pk=profile.id, data-type="profile") Report
          br
    ul.list-group
      li.list-group-item.section-header Navigation
      li.list-group-item
        ul.nav.nav-tabs.nav-stacked(role="tablist", style="border: none !important;")
          li(role="presentation")
            a(href="/member/{{profile.my_url}}") About Me
          li(role="presentation")
            a(href="/member/{{profile.my_url}}/friends") Friends
          {% if current_user == profile or current_user.is_admin  %}
          li(role="presentation")
            a(href="/member/{{profile.my_url}}/change-account") Account
          {% endif %}
          if current_user == profile or current_user.is_admin
            li(role="presentation")
              a(href="/member/{{profile.my_url}}/signatures") Signatures
          if current_user == profile or current_user.is_admin
            li(role="presentation")
              a(href="/member/{{profile.my_url}}/change-settings") Settings
            li(role="presentation")
              a(href="/member/{{profile.my_url}}/customize-profile") Customize
    {% block profile_sidebar %}
    if ask_me
      ul.list-group
        li.list-group-item.section-header Ask Me
        li.list-group-item
          ul.nav.nav-tabs.nav-stacked(role="tablist", style="border: none !important;")
            for topic in ask_me
              li(role="presentation")
                a(href="/t/{{topic.slug}}")= topic.title
    ul.list-group
      li.list-group-item.section-header.category-section-header {{profile.display_name}}'s Stats
      li.list-group-item
        ul
          if topic_count == 1
            li {{topic_count}} <strong>topic</strong>
          else
            li {{topic_count}} <strong>topics</strong>
          if post_count == 1
            li {{post_count}} <strong>post</strong>
          else
            li {{post_count}} <strong>posts</strong>
          if boops_given == 1
            li {{boops_given}} <strong>boop given</strong>
          else
            li {{boops_given}} <strong>boops given</strong>
          if boops_received == 1
            li {{boops_received}} <strong>boop received</strong>
          else
            li {{boops_received}} <strong>boops received</strong>
          if status_update_count == 1
            li {{status_update_count}} <strong>status update</strong>
          else
            li {{status_update_count}} <strong>status updates</strong>
          if status_update_comments_count == 1
            li {{status_update_comments_count}} <strong>status comment</strong>
          else
            li {{status_update_comments_count}} <strong>status comments</strong>
          if favorite_phrase
            li <strong>Favorite Phrase</strong>
            span "...{{favorite_phrase}}..." 
          if common_emotes
            li <strong>Common Emotes</strong>
              br
              for emote in common_emotes
                span {{emote}}
                | &nbsp;
                if loop.index == 3
                  br    
    if custom_fields or age
      ul.list-group
        li.list-group-item.section-header.category-section-header Other Stuff
        li.list-group-item
          ul
            if age
              li
                b Age
                |&nbsp;&nbsp;&nbsp;
                |{{age}} years old
            for field_type in available_fields
              for field in custom_fields
                if field[0] == field_type:
                  li
                    b= field[0]
                    |&nbsp;&nbsp;&nbsp;
                    |{{field[1]}}
    if recent_visitors
      ul.list-group
        li.list-group-item.section-header.category-section-header Recent Visitors
        for visitor in recent_visitors
          li.list-group-item
            .media-left 
              a.subcategory-listing-recent-image(href="/member/{{visitor[0].my_url}}")
                img.avatar-mini(src=visitor[0].get_avatar_url("60"), width=visitor[0].avatar_60_x, height=visitor[0].avatar_60_y)
            .media-body
              a.hover_user(href="{{url_for('view_profile', login_name=visitor[0].my_url)}}") {{visitor[0].display_name}}
              div {{visitor[1]|humanize_time}}
    if profile.last_seen_ip_address and current_user.is_admin
      ul.list-group
        li.list-group-item.section-header.category-section-header Last Seen IP Address
        li.list-group-item
          p
            strong= profile.last_seen_ip_address
    {% endblock %}
  .col-sm-8
    {% block profile_content %}
    ul.list-group
      li.list-group-item.section-header About Me
        {% if current_user == profile or current_user.is_admin %}
        a(href="")
          span.glyphicon.glyphicon-cog.float-right#about-me-cog-icon
        {% endif %}
      li.list-group-item(style="min-height: 245px;")
        if profile.about_me == "<br>" or profile.about_me == "<div></div>"
          #user-profile-about-me.post-content
            p {{profile.display_name|e}} doesn't have an about me...
        else
          #user-profile-about-me.post-content!= profile.parsed_about_me  
    if recent_blog_entries
      .row
        .col-xs-12
          ul.list-group
            li.list-group-item.section-header {{profile.display_name}}'s Recent Blog Entries
            for blog_entry in recent_blog_entries
              li.list-group-item
                a(href="/blog/{{blog_entry.blog.slug}}")= blog_entry.blog.name
                |&nbsp;::&nbsp;
                a(href="/blog/{{blog_entry.blog.slug}}/e/{{blog_entry.slug}}")= blog_entry.title
    if current_user.is_authenticated() and current_user != profile
      .row
        .col-xs-12
          ul.list-group
            li.list-group-item.section-header {{profile.display_name}}'s Comment Box
            li.list-group-item
              center
                p
                form.form-group.status-reply-box
                  input.form-control#status-new(type="text", maxlength="250")
                  br
                  button#new-status.btn.btn-primary(type="submit", data-target="{{profile.login_name}}") Leave Comment for {{profile.display_name}}
    .row
      .col-sm-6
        if recent_posts
          ul.list-group
            li.list-group-item.section-header Recent Posts
            for post in recent_posts
              li.list-group-item Replied to 
                a(href="/t/{{post.topic.slug}}/page/1/post/{{post.id}}")= post.topic.title     
        if recent_status_updates
          ul.list-group
            li.list-group-item.section-header Recent Status Updates
            for status in recent_status_updates
              li.list-group-item.front-page-status.sidebar-status-section
                .media-left
                  a(href="{{url_for('view_profile', login_name=status.author.my_url)}}")
                    img.media-object(src="{{ status.author.get_avatar_url("60") }}", width="{{ status.author.avatar_60_x }}", height="{{ status.author.avatar_60_y }}", class="avatar-mini")
                .media-body
                  a.hover_user(href="{{url_for('view_profile', login_name=status.author.my_url)}}") {{ status.author.display_name }}
                  span &nbsp;says
                    if status.attached_to_user
                      | &nbsp;to 
                      a.hover_user(href="{{url_for('view_profile', login_name=status.attached_to_user.my_url)}}") {{ status.attached_to_user.display_name }}
                      |:
                  span.discuss 
                    a(href="/status/{{status.id}}") Discuss{% if status.get_comment_count() %} ({{status.get_comment_count()}}) {% endif %}
                  br
                  p.status-message {{status.message}}
                  span.status-reply-time 
                    a(href="/status/{{status.id}}") {{ status.created|humanize_time }}
      .col-sm-6
        if recent_topics
          ul.list-group
            li.list-group-item.section-header Recent Topics
            for topic in recent_topics
              li.list-group-item Posted  
                a(href="/t/{{topic.slug}}")= topic.title
        if recent_status_updates_to_user
          ul.list-group
            li.list-group-item.section-header Messages to {{profile.display_name}}
            for status in recent_status_updates_to_user
              li.list-group-item.front-page-status.sidebar-status-section
                .media-left
                  a(href="{{url_for('view_profile', login_name=status.author.my_url)}}")
                    img.media-object(src="{{ status.author.get_avatar_url("60") }}", width="{{ status.author.avatar_60_x }}", height="{{ status.author.avatar_60_y }}", class="avatar-mini")
                .media-body
                  a.hover_user(href="{{url_for('view_profile', login_name=status.author.my_url)}}") {{ status.author.display_name }}
                  span &nbsp;says
                    if status.attached_to_user
                      | &nbsp;to 
                      a.hover_user(href="{{url_for('view_profile', login_name=status.attached_to_user.my_url)}}") {{ status.attached_to_user.display_name }}
                      |:
                  span.discuss 
                    a(href="/status/{{status.id}}") Discuss{% if status.get_comment_count() %} ({{status.get_comment_count()}}) {% endif %}
                  br
                  p.status-message {{status.message}}
                  span.status-reply-time 
                    a(href="/status/{{status.id}}") {{ status.created|humanize_time }}
    {% endblock %}
{% endblock %}

{% block script %}
{% assets filters="rjsmin", output="generated/editor.js",
"assets/quill2/quill.js", "assets/dropzone/dropzone.js", 
"assets/select2/select2.full.js", "local/js/inline-editor.js" %}
script(type="text/javascript", src="{{ASSET_URL}}").
{% endassets %}

script(type="text/javascript").
  $(document).ready(function(){
    var editor_live = false;
    {% if current_user.is_authenticated() %}
    $("#about-me-cog-icon").click(function(e) {
      e.preventDefault();
      if( editor_live != true ) {
        var editor = new InlineEditor("#user-profile-about-me", "/member/{{profile.my_url}}/edit-profile", true);
        editor_live = true;
        $.get("/member/{{profile.my_url}}/edit-profile", {}, function(data) {
          editor.setElementHtml(data.content);
        });
        editor.onSave(function (html) {
          $.post("/member/{{profile.my_url}}/edit-profile", {"about_me": html},function(data) {
            if (data.error != null) {
              editor.flashError(data.error);
            } else {
              $("#user-profile-about-me").html(data.about_me);
              editor.destroyEditor();
            }
          });
        });
        editor.onCancel(function (html) {
          editor.destroyEditor()
          editor_live = false;
          editor.resetElementHtml();
        });
        }
      });
    window.setupContent()
    {% endif %}
  });
{% endblock %}
