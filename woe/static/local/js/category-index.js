// Generated by CoffeeScript 1.9.2
(function() {
  $(function() {
    var Category;
    Category = (function() {
      function Category(slug) {
        var category;
        this.slug = slug;
        category = this;
        this.page = 1;
        this.pagination = $(".topic-listing").data("pagination");
        this.topicHTML = Handlebars.compile(this.topicHTMLTemplate());
        this.getPreferences();
        this.refreshTopics();
        $("#prefix-filter-show-all").click((function(_this) {
          return function(e) {
            e.preventDefault();
            return _this.disablePrefixFiltering();
          };
        })(this));
        $(".prefix-filter-action").click(function(e) {
          var element;
          e.preventDefault();
          element = $(this);
          if (element.children("span").hasClass("glyphicon-ok")) {
            element.children("span").removeClass("glyphicon-ok");
            element.children("span").addClass("glyphicon-remove");
          } else {
            element.children("span").removeClass("glyphicon-remove");
            element.children("span").addClass("glyphicon-ok");
          }
          return category.setPreferences();
        });
      }

      Category.prototype.topicHTMLTemplate = function() {
        return "  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-6\">\n      <span class=\"topic-listing-name\">\n      {{#if prefix}}\n      {{{pre_html}}}{{{prefix}}}{{{post_html}}}\n      {{/if}}\n      <a href=\"#\">{{title}}</a><br>\n      <span class=\"topic-author\">\n        Started by {{creator}}, {{created}}\n      </span>\n      <span class=\"topic-listing-jumps\">\n        <span class=\"badge\" style=\"\"><a class=\"inherit_colors\" href=\"#\">1</a></span>\n        {{#if last_pages}}\n        <span class=\"badge\" style=\"\">...</span>\n        <span class=\"badge\" style=\"\"><a class=\"inherit_colors\" href=\"#\">{{last_page}}</a></span>\n        {{/if}}\n      </span>\n    </div>\n    <div class=\"col-xs-3 hidden-xs hidden-sm\">\n      <span class=\"topic-listing-recent\">\n        <a href=\"#\" class=\"topic-listing-text\">{{post_count}} replies</a>\n        <br>\n        <a href=\"#\" class=\"topic-listing-text\">{{view_count}} views</a>\n      </span>\n    </div>\n    <div class=\"col-xs-6 col-sm-3 hidden-xs\">\n      <span class=\"topic-listing-recent-image\">\n        <img src=\"{{last_post_author_avatar}}\" width=\"{{last_post_x}}px\" height=\"{{last_post_y}}px\">\n      </span>\n      <span class=\"topic-listing-recent\">\n        <a href=\"/profile/{{last_post_by_login_name}}\" class=\"topic-listing-username\">{{last_post_by}}</a>\n        <br>\n        <a href=\"#\" class=\"topic-listing-time\">{{last_post_date}}</a>\n      </span>\n    </div>\n  </div>\n</div>\n<hr>";
      };

      Category.prototype.refreshTopics = function() {
        var new_topic_html;
        new_topic_html = "";
        return $.post("/category/" + this.slug + "/topics", JSON.stringify({
          page: this.page,
          pagination: this.pagination
        }), (function(_this) {
          return function(data) {
            var i, len, ref, topic;
            ref = data.topics;
            for (i = 0, len = ref.length; i < len; i++) {
              topic = ref[i];
              new_topic_html = new_topic_html + _this.topicHTML(topic);
            }
            return $(".topic-listing").html(new_topic_html);
          };
        })(this));
      };

      Category.prototype.disablePrefixFiltering = function() {
        this.preferences = {};
        $(".prefix-filter-action").children("span").removeClass("glyphicon-remove");
        $(".prefix-filter-action").children("span").addClass("glyphicon-ok");
        return this.setPreferences();
      };

      Category.prototype.setPreferences = function() {
        var category;
        this.preferences = {};
        category = this;
        if ($(".prefix-filter-action").children(".glyphicon-remove").length > 0) {
          $(".prefix-filter-action").children(".glyphicon-ok").parent().each(function() {
            var element;
            element = $(this);
            return category.preferences[element.data("prefix")] = 1;
          });
        }
        return $.post("/category/" + this.slug + "/filter-preferences", JSON.stringify({
          preferences: this.preferences
        }), (function(_this) {
          return function(data) {
            return _this.refreshTopics();
          };
        })(this));
      };

      Category.prototype.getPreferences = function() {
        return $.get("/category/" + this.slug + "/filter-preferences", (function(_this) {
          return function(data) {
            var prefix, results;
            _this.preferences = data.preferences;
            if ($.isEmptyObject(_this.preferences)) {
              return _this.disablePrefixFiltering();
            } else {
              $(".prefix-filter-action").children("span").removeClass("glyphicon-ok");
              $(".prefix-filter-action").children("span").addClass("glyphicon-remove");
              results = [];
              for (prefix in _this.preferences) {
                $("[data-prefix='" + prefix + "']").children("span").removeClass("glyphicon-remove");
                results.push($("[data-prefix='" + prefix + "']").children("span").addClass("glyphicon-ok"));
              }
              return results;
            }
          };
        })(this));
      };

      return Category;

    })();
    return window.category = new Category($(".topic-listing").data("slug"));
  });

}).call(this);
